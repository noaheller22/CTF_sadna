import argparse
import base64
import binascii
import socket
import ssl


SERVER_HOST = "nova.cs.tau.ac.il" 
SERVER_PORT = 5001


def query_oracle(ciphertext: str) -> bool:
    b64_ciphertext = base64.b64decode(ciphertext).hex()
    new_ciphertext = binascii.unhexlify(b64_ciphertext.strip())

    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        context = ssl._create_unverified_context()
        secure_sock = context.wrap_socket(sock, server_hostname=SERVER_HOST)
        secure_sock.connect((SERVER_HOST, SERVER_PORT))
        secure_sock.send(new_ciphertext)
        response = secure_sock.recv(1024).decode()
        secure_sock.close()

        if response.startswith("valid:"):
            return True
        return False
    except Exception as e:
        print(f"Oracle error: {str(e)}")
        return False


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--cipher_candidate")
    args = parser.parse_args()

    is_valid = query_oracle(args.cipher_candidate)
    if is_valid:
        print(f"=> classified as VALID ")
    else:
        print(f"=> classified as INVALID")
