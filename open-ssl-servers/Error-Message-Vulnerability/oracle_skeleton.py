import socket, ssl, binascii

SERVER_HOST = "127.0.0.1" #Locally - should be changed by what the game exposed 
SERVER_PORT = 4433

def query_oracle(ciphertext: bytes):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        context = ssl._create_unverified_context()  # ignore cert
        secure_sock = context.wrap_socket(sock, server_hostname=SERVER_HOST)
        secure_sock.connect((SERVER_HOST, SERVER_PORT))
        secure_sock.send(ciphertext)
        response = secure_sock.recv(1024).decode()
        secure_sock.close()
        return response
    except Exception as e:
        return f"error:Oracle error: {str(e)}"

if __name__ == "__main__":
    while True:
        cipher_hex = input("Type cipher (in hex) here, if you want to end type done: ").strip()
        if cipher_hex.lower() == "done":
            break
        try:
            ciphertext = binascii.unhexlify(cipher_hex)
        except binascii.Error:
            print("Input not valid hex â†’ TRY AGAIN")
            continue
        response = query_oracle(ciphertext)
        print(f"Server response: {response}")
