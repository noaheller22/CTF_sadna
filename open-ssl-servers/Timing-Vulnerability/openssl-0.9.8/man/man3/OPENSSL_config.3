.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "OPENSSL_config 3"
.TH OPENSSL_config 3 2015-06-11 0.9.8zg OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
OPENSSL_config, OPENSSL_no_config \- simple OpenSSL configuration functions
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/conf.h>
\&
\& void OPENSSL_config(const char *config_name);
\& void OPENSSL_no_config(void);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\fBOPENSSL_config()\fR configures OpenSSL using the standard \fBopenssl.cnf\fR
configuration file name using \fBconfig_name\fR. If \fBconfig_name\fR is NULL then
the default name \fBopenssl_conf\fR will be used. Any errors are ignored. Further
calls to \fBOPENSSL_config()\fR will have no effect. The configuration file format
is documented in the \fBconf\fR\|(5) manual page.
.PP
\&\fBOPENSSL_no_config()\fR disables configuration. If called before \fBOPENSSL_config()\fR
no configuration takes place.
.SH NOTES
.IX Header "NOTES"
It is \fBstrongly\fR recommended that \fBall\fR new applications call \fBOPENSSL_config()\fR
or the more sophisticated functions such as \fBCONF_modules_load()\fR during
initialization (that is before starting any threads). By doing this
an application does not need to keep track of all configuration options
and some new functionality can be supported automatically.
.PP
It is also possible to automatically call \fBOPENSSL_config()\fR when an application
calls \fBOPENSSL_add_all_algorithms()\fR by compiling an application with the
preprocessor symbol \fBOPENSSL_LOAD_CONF\fR #define'd. In this way configuration
can be added without source changes.
.PP
The environment variable \fBOPENSSL_CONF\fR can be set to specify the location
of the configuration file.
.PP
Currently ASN1 OBJECTs and ENGINE configuration can be performed future
versions of OpenSSL will add new configuration options.
.PP
There are several reasons why calling the OpenSSL configuration routines is
advisable. For example new ENGINE functionality was added to OpenSSL 0.9.7.
In OpenSSL 0.9.7 control functions can be supported by ENGINEs, this can be
used (among other things) to load dynamic ENGINEs from shared libraries (DSOs).
However very few applications currently support the control interface and so
very few can load and use dynamic ENGINEs. Equally in future more sophisticated
ENGINEs will require certain control operations to customize them. If an
application calls \fBOPENSSL_config()\fR it doesn't need to know or care about
ENGINE control operations because they can be performed by editing a
configuration file.
.PP
Applications should free up configuration at application closedown by calling
\&\fBCONF_modules_free()\fR.
.SH RESTRICTIONS
.IX Header "RESTRICTIONS"
The \fBOPENSSL_config()\fR function is designed to be a very simple "call it and
forget it" function. As a result its behaviour is somewhat limited. It ignores
all errors silently and it can only load from the standard configuration file
location for example.
.PP
It is however \fBmuch\fR better than nothing. Applications which need finer
control over their configuration functionality should use the configuration
functions such as \fBCONF_load_modules()\fR directly.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Neither \fBOPENSSL_config()\fR nor \fBOPENSSL_no_config()\fR return a value.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBconf\fR\|(5), \fBCONF_load_modules_file\fR\|(3),
\&\fBCONF_modules_free\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
\&\fBOPENSSL_config()\fR and \fBOPENSSL_no_config()\fR first appeared in OpenSSL 0.9.7
