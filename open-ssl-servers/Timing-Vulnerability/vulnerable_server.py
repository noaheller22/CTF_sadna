#!/usr/bin/env python3
import socket, struct, hmac
from os import urandom
from hashlib import md5, sha1
from cryptography.hazmat.primitives.asymmetric import padding
from cryptography.hazmat.primitives.serialization import load_pem_private_key
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend

# Import common helpers
from Tls_helpers import handle_client


CERT_FILE = "server.crt"
KEY_FILE = "server.key"



def main():
    with open(KEY_FILE, "rb") as f:
        priv_key = load_pem_private_key(f.read(), password=None)
    with open(CERT_FILE, "rb") as f:
        cert_bytes = f.read()

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    sock.bind(("0.0.0.0", 5002))
    sock.listen(5)
    print("[*] TLS Timing-Oracle Server listening on 0.0.0.0:5002")

    while True:
        conn, addr = sock.accept()
        print(f"[*] Connection from {addr}")
        handle_client(conn, priv_key, cert_bytes)

if __name__ == "__main__":
    main()
